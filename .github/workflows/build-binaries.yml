name: Build Binaries

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            rust_target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            arch: arm64
            rust_target: aarch64-unknown-linux-gnu
          - os: macos-latest
            arch: amd64
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            arch: arm64
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            arch: amd64
            rust_target: x86_64-pc-windows-gnu
#          - os: ubuntu-latest  # Disabled as corosensei-0.1.4 doesn't support aarch64-pc-windows-msvc
#            arch: arm64
#            rust_target: aarch64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.rust_target }}

#      - name: Add aarch64-pc-windows-msvc target
#        run: rustup target add aarch64-pc-windows-msvc
#        if: matrix.rust_target == 'aarch64-pc-windows-gnu'

      - name: Install cross
        run: cargo install cross

      - name: Build
        run: |
          cd libgroth16
          cross build --release --target ${{ matrix.rust_target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: libgroth16-${{ matrix.os }}-${{ matrix.arch }}
          path: libgroth16/target/${{ matrix.rust_target }}/release/libgroth16.*